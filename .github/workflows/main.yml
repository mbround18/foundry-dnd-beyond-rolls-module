name: Release Processing

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          cache: "npm"
          node-version: "18.x"

      - run: |
          npm install
        name: Install Dependencies

      - run: |
          npm run build

      # get part of the tag after the `v`
      - name: Extract tag version number
        run: |
          echo "version-without-v=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      # Substitute the Manifest and Download URLs in the module.json
      - name: Substitute Manifest and Download Links For Versioned Ones
        id: sub_manifest_link_version
        env:
          VERSION: ${{steps.get_version.outputs.version-without-v}}
          REPO_URL: https://github.com/${{github.repository}}
          MANIFEST_URL: https://github.com/${{github.repository}}/releases/latest/download/module.json
          DOWNLOAD_URL: https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/module.zip
        run: |
          envsubst < ./module.json > ./dist/module.json

      # Create a zip file with all files required by the module to add to the release
      - run: zip -r ./module.zip module.js module.json
        working-directory: ./dist

      # Create a release for this specific version
      - name: Update Release with Files
        id: create_version_release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true # Set this to false if you want to prevent updating existing releases
          name: ${{ github.event.release.name }}
          draft: ${{ github.event.release.unpublished }}
          prerelease: ${{ github.event.release.prerelease }}
          token: ${{ secrets.GH_TOKEN }}
          artifacts: "./dist/module.json, ./dist/module.zip"
          tag: ${{ github.event.release.tag_name }}
          body: ${{ github.event.release.body }}
